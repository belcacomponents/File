<?php

namespace Belca\File\Http\Controllers;

use Belca\File\Repositories\FileRepository;

/**
 * Управление модификациями файлов.
 */
class ModificationController //extends AnotherClass
{
    public function index($id = null, Request $request)
    {
        // TODO отображает список всех файлов без группировки по модификациям
        // Или загружает файлы принадлежащие одной модификации
        // Или отображает сгрупированный список модификаций
        // Или отображает только главные картинки и содержит значек "модификации". Хотя они будут у всех
        // Нажимая на который будет отображены файлы модификаций и оригинал.
    }

    // TODO мы тут сразу можем сделать метод загрузки модификации или добавить настройки к какому-нибудь из них
    // чтобы загрузать модификации изображения напрямую или заменять их
    // просматривать список модификаций, редактировать их данные
    // изменять назначения модификаций
    // короче все вручную, а доп пакетом расширить

    public function create($id)
    {
        // Страница создания модификации
        // Содержит путь или ссылку на оригинальный файл
        // Описание модификации на основе оригинала
        //
        // Данные о файле (тип модификации или возможные типы. Для каждого файла
        // оригинала будут свои типы модификации, хоть они могут совпадать) - передается через composer
        // Берется из настроек или какого-то класса. С бибилотекой генерации должна оттуда загружаться.
        // Возможно должен быть какой-то интерфейс для загрузки списка модификаций на основе типа или тп.
        // У списка модификаций должны быть переводы
    }

    public function store(Request $request, $id)
    {
        // Сохраняет модификацию добавляя всю соответствующую информацию
        // Создает новый файл в соответствии с заданными настройками
    }

    public function edit($id)
    {
        // Отображает страницу редактирования модификации или файла
        // Содержит информацию только о модификации
        // Отсюда можно вызвать страницу загрузки замены файла
    }

    public function update(Request $request, $id)
    {
        // Обновляет данные модификации
    }

    public function replace($id)
    {
        // страница загрузки нового файла модификации (заменяет файл)
    }

    public function overwrite(Request $request, $id)
    {
        // Заменяет файл удаляя или перезаписывая старый файл
        // В зависимости от настроек выполняется обработка или нет. По умолчанию нет
    }

    public function delete($id)
    {
        // Открывает страницу удаления модификации
    }

    public function destory($id)
    {
        // Удаляет модификацию
    }
}
